@page "/FileEx/ConfirmImageFile"

<h3>Upload PNG images</h3>

<div class="file-div">
    <label for="formFileLg" class="file-label">Example file image upload(.jpg, .jpeg, .png)</label>
    <InputFile OnChange="@OnInputFileChange" multiple class="file-input" accept=".jpg, .jpeg, png" />
</div>

@if (imageFiles.Count > 0)
{
    <h4>선택된 이미지</h4>
    <br />
    
    <div class="card" style="width:30rem;">
        <div class="card-body">
            @foreach (var imageData in imageFiles)
            {
                <img class="rounded m-1" src="@imageData.ImageDataUrl" />
                <br />
                <b>File Name:</b> @imageData.Name
                <br />
                <b>Size:</b> @imageData.Size
                <br />
                <b>Last Modified:</b> @imageData.LastModified
                <br />
                <b>Type:</b> @imageData.ContentType;
                <br />
            }
        </div>
    </div>
}

@code {
    private List<ImageFileModel> imageFiles = new List<ImageFileModel>();

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var maxAllowedFiles = 3;
        foreach (var imageFile in e.GetMultipleFiles(maxAllowedFiles))
        {
            var imageModel = new ImageFileModel()
            {
                Name = imageFile.Name,
                Size = imageFile.Size,
                LastModified = imageFile.LastModified,
                ContentType = imageFile.ContentType
            };
            imageModel.ImageDataUrl = await GetImageDataUrl(imageFile);
            imageFiles.Add(imageModel);
        }
    }

    private async Task<string> GetImageDataUrl(IBrowserFile imageFile)
    {
        var format = "image/png";
        var resizedImageFile = await imageFile.RequestImageFileAsync(format,
            200, 200);
        var buffer = new byte[resizedImageFile.Size];
        await resizedImageFile.OpenReadStream().ReadAsync(buffer);
        return $"data:{format};base64,{Convert.ToBase64String(buffer)}";
    }
}
