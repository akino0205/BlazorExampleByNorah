@page "/Localization"
@page "/Localization/Index"
@using System.Threading
@inject NavigationManager NavigationManager

<h3>Language - Ko</h3>
<div style="margin-bottom: 20px;">
    Select your language:
    <TelerikDropDownList Data="@Cultures"
                         Value="@SelectedCulture"
                         ValueChanged="@((string value) => { OnValueChanged(value); })"
                         PopupHeight=""
                         TextField="@nameof(CultureData.Text)"
                         ValueField="@nameof(CultureData.Value)">
    </TelerikDropDownList>
    <br />
    Current UI culture (used for localization): @Thread.CurrentThread.CurrentUICulture.Name
    <br />
    Current thread culture (used for date and number formatting): @Thread.CurrentThread.CurrentCulture.Name
</div>

<div class="form-group">
    <label>Date Input</label>
    <TelerikDateInput class="form-control" @bind-Value="model.inputTextDate" Format="yyyy MMMM dd" @ref="theDateInput"></TelerikDateInput>
</div>
<div class="form-group">
    <label>Date Picker</label>
    <TelerikDatePicker class="form-control" @bind-Value="model.inputTextDate2" @ref="theDatePicker"></TelerikDatePicker>
</div>
<div class="form-group">
    <label>DateRange Picker</label><br />
    <TelerikDateRangePicker @bind-StartValue="model.inputTextDateRangeStart"
                            @bind-EndValue="model.inputTextDateRangeEnd">
    </TelerikDateRangePicker>
</div>
<div class="form-group">
    <label>DateTime Picker</label><br />
    <TelerikDateTimePicker class="form-control"
                           Min="@Min" Max="@Max" @bind-Value="@model.inputTextDateTime"
                           Format="yyyy MMM dd HH:mm:ss" Width="250px"></TelerikDateTimePicker>
</div>
@code {
    private BasicInputModel model = new BasicInputModel()
    {
        inputTextDate = DateTime.Now,
        inputTextDate2 = DateTime.Now,
        inputTextDateRangeStart = DateTime.Now,
        inputTextDateRangeEnd = DateTime.Now.AddDays(10),
        inputTextDateTime = DateTime.Now,
        checkedRadio = "1",
    };

    TelerikDateInput<DateTime> theDateInput;
    TelerikDatePicker<DateTime> theDatePicker;
    private DateTime Min = new DateTime(1990, 1, 1, 8, 15, 0);
    private DateTime Max = new DateTime(2025, 1, 1, 19, 30, 45);



    public class CultureData
    {
        public string Text { get; set; }
        public string Value { get; set; }
    }

    public List<CultureData> Cultures { get; set; } = new List<CultureData>()
{
        new  CultureData() { Text = "English", Value = "en-US" },
        new  CultureData() { Text = "French", Value = "fr-FR" },
        new  CultureData() { Text = "Bulgarian", Value = "bg-BG" },
        new  CultureData() { Text = "Korean", Value = "ko-KR" },
    };

    public string SelectedCulture { get; set; } = Thread.CurrentThread.CurrentUICulture.Name;

    public void OnValueChanged(string eventArgs)
    {
        SelectedCulture = eventArgs;

        SetCulture(eventArgs);
    }

    public void SetCulture(string culture)
    {
        var uri = new Uri(NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        var query = $"?culture={Uri.EscapeDataString(culture)}&redirectUri={Uri.EscapeDataString(uri)}";

        // use a path that matches your culture redirect controller from the previous steps
        NavigationManager.NavigateTo("/Localization" + query, forceLoad: true);
    }
}